{"ast":null,"code":"var _jsxFileName = \"/Users/leenjarbouh/Desktop/leapc-python-bindings/frontend/src/components/SpotifyStatus.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { AlertCircle, CheckCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyStatus = () => {\n  _s();\n  const [status, setStatus] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const initSpotify = async () => {\n      try {\n        // First check status\n        const statusResponse = await fetch('http://localhost:5001/api/spotify/status');\n        const statusData = await statusResponse.json();\n        if (statusData.status === 'error') {\n          setError(statusData.message);\n          return;\n        }\n        setStatus(statusData);\n\n        // If no active device or not playing, initialize\n        if (!statusData.is_playing) {\n          const initResponse = await fetch('http://localhost:5001/api/spotify/init');\n          const initData = await initResponse.json();\n          if (initData.status === 'error') {\n            setError(initData.message);\n          }\n        }\n      } catch (err) {\n        setError('Failed to connect to Spotify server');\n        console.error('Spotify initialization error:', err);\n      }\n    };\n    initSpotify();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-6 right-6 bg-red-500/10 border border-red-500 text-red-500 px-4 py-2 rounded-lg flex items-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n  if (!status) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-6 right-6 bg-green-500/10 border border-green-500 text-green-500 px-4 py-2 rounded-lg flex items-center gap-2\",\n    children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n      size: 16\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Connected to Spotify (\", status.user, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyStatus, \"ruaAgtYrEaLYm0eZun6ierbyWUE=\");\n_c = SpotifyStatus;\nexport default SpotifyStatus;\nvar _c;\n$RefreshReg$(_c, \"SpotifyStatus\");","map":{"version":3,"names":["React","useState","useEffect","AlertCircle","CheckCircle","jsxDEV","_jsxDEV","SpotifyStatus","_s","status","setStatus","error","setError","initSpotify","statusResponse","fetch","statusData","json","message","is_playing","initResponse","initData","err","console","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","user","_c","$RefreshReg$"],"sources":["/Users/leenjarbouh/Desktop/leapc-python-bindings/frontend/src/components/SpotifyStatus.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AlertCircle, CheckCircle } from 'lucide-react';\n\nconst SpotifyStatus = () => {\n  const [status, setStatus] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const initSpotify = async () => {\n      try {\n        // First check status\n        const statusResponse = await fetch('http://localhost:5001/api/spotify/status');\n        const statusData = await statusResponse.json();\n        \n        if (statusData.status === 'error') {\n          setError(statusData.message);\n          return;\n        }\n        \n        setStatus(statusData);\n        \n        // If no active device or not playing, initialize\n        if (!statusData.is_playing) {\n          const initResponse = await fetch('http://localhost:5001/api/spotify/init');\n          const initData = await initResponse.json();\n          \n          if (initData.status === 'error') {\n            setError(initData.message);\n          }\n        }\n      } catch (err) {\n        setError('Failed to connect to Spotify server');\n        console.error('Spotify initialization error:', err);\n      }\n    };\n\n    initSpotify();\n  }, []);\n\n  if (error) {\n    return (\n      <div className=\"fixed top-6 right-6 bg-red-500/10 border border-red-500 text-red-500 px-4 py-2 rounded-lg flex items-center gap-2\">\n        <AlertCircle size={16} />\n        <span>{error}</span>\n      </div>\n    );\n  }\n\n  if (!status) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed top-6 right-6 bg-green-500/10 border border-green-500 text-green-500 px-4 py-2 rounded-lg flex items-center gap-2\">\n      <CheckCircle size={16} />\n      <span>Connected to Spotify ({status.user})</span>\n    </div>\n  );\n};\n\nexport default SpotifyStatus;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA,MAAMC,cAAc,GAAG,MAAMC,KAAK,CAAC,0CAA0C,CAAC;QAC9E,MAAMC,UAAU,GAAG,MAAMF,cAAc,CAACG,IAAI,CAAC,CAAC;QAE9C,IAAID,UAAU,CAACP,MAAM,KAAK,OAAO,EAAE;UACjCG,QAAQ,CAACI,UAAU,CAACE,OAAO,CAAC;UAC5B;QACF;QAEAR,SAAS,CAACM,UAAU,CAAC;;QAErB;QACA,IAAI,CAACA,UAAU,CAACG,UAAU,EAAE;UAC1B,MAAMC,YAAY,GAAG,MAAML,KAAK,CAAC,wCAAwC,CAAC;UAC1E,MAAMM,QAAQ,GAAG,MAAMD,YAAY,CAACH,IAAI,CAAC,CAAC;UAE1C,IAAII,QAAQ,CAACZ,MAAM,KAAK,OAAO,EAAE;YAC/BG,QAAQ,CAACS,QAAQ,CAACH,OAAO,CAAC;UAC5B;QACF;MACF,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZV,QAAQ,CAAC,qCAAqC,CAAC;QAC/CW,OAAO,CAACZ,KAAK,CAAC,+BAA+B,EAAEW,GAAG,CAAC;MACrD;IACF,CAAC;IAEDT,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE;IACT,oBACEL,OAAA;MAAKkB,SAAS,EAAC,mHAAmH;MAAAC,QAAA,gBAChInB,OAAA,CAACH,WAAW;QAACuB,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzBxB,OAAA;QAAAmB,QAAA,EAAOd;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,IAAI,CAACrB,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEA,oBACEH,OAAA;IAAKkB,SAAS,EAAC,yHAAyH;IAAAC,QAAA,gBACtInB,OAAA,CAACF,WAAW;MAACsB,IAAI,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzBxB,OAAA;MAAAmB,QAAA,GAAM,wBAAsB,EAAChB,MAAM,CAACsB,IAAI,EAAC,GAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACtB,EAAA,CAvDID,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAyDnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}